{"version":3,"sources":["player/player-flyweb-slave.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mCAAiC;AAIjC;IAAuC,qCAAM;IAG3C,2BAAY,UAAsB,EAAE,MAAyB;QAA7D,YACE,kBAAM,UAAU,EAAE,MAAM,CAAC,SAE1B;QADC,KAAI,CAAC,qBAAqB,GAAG,IAAI,CAAA;;IACnC,CAAC;IAED,oCAAQ,GAAR,UAAS,MAAc;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAA;QACpC,CAAC;IACH,CAAC;IAEK,qCAAS,GAAf,UAAgB,KAAY;;;;gBAC1B,WAAO,IAAI,OAAO,CAAS,UAAA,CAAC,IAAI,OAAA,CAAC,KAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC,EAAhC,CAAgC,CAAC,EAAA;;;KAClE;IACH,wBAAC;AAAD,CAjBA,AAiBC,CAjBsC,eAAM,GAiB5C;AAjBY,8CAAiB","file":"player-flyweb-slave.js","sourcesContent":["import { Player } from './player'\r\nimport { Board, BoardPiece } from '../board'\r\nimport { Utils } from '../utils'\r\n\r\nexport class PlayerFlywebSlave extends Player {\r\n  actionPromiseResolver: any\r\n\r\n  constructor(boardPiece: BoardPiece, canvas: HTMLCanvasElement) {\r\n    super(boardPiece, canvas)\r\n    this.actionPromiseResolver = null\r\n  }\r\n\r\n  doAction(column: number) {\r\n    if (this.actionPromiseResolver) {\r\n      this.actionPromiseResolver(column)\r\n    }\r\n  }\r\n\r\n  async getAction(board: Board): Promise<number> {\r\n    return new Promise<number>(r => (this.actionPromiseResolver = r))\r\n  }\r\n}\r\n"]}