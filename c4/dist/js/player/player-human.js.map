{"version":3,"sources":["player/player-human.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mCAAiC;AACjC,kCAA4C;AAC5C,kCAAgC;AAEhC;IAAiC,+BAAM;IAGrC,qBAAY,UAAsB,EAAE,MAAyB;QAA7D,YACE,kBAAM,UAAU,EAAE,MAAM,CAAC,SAU1B;QATC,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAA;QAEhC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAA,GAAG;YAClC,IAAI,CAAC;gBACH,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA;YACvB,CAAC;YAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACX,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;YAClB,CAAC;QACH,CAAC,CAAC,CAAA;;IACJ,CAAC;IAED,8BAAQ,GAAR,UAAS,MAAc;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,IAAI,CAAC,IAAI,MAAM,IAAI,MAAM,GAAG,aAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAA;QACnC,CAAC;IACH,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAiB;QACnC,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAA;QAChD,IAAM,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAA;QACnC,IAAM,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAA;QAClC,IAAM,MAAM,GAAG,aAAK,CAAC,kBAAkB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;QACvD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;IACvB,CAAC;IAEK,+BAAS,GAAf,UAAgB,KAAY;;;;gBAC1B,WAAO,IAAI,OAAO,CAAS,UAAA,CAAC,IAAI,OAAA,CAAC,KAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,EAA/B,CAA+B,CAAC,EAAA;;;KACjE;IACH,kBAAC;AAAD,CAjCA,AAiCC,CAjCgC,eAAM,GAiCtC;AAjCY,kCAAW","file":"player-human.js","sourcesContent":["import { Player } from './player'\r\nimport { Board, BoardPiece } from '../board'\r\nimport { Utils } from '../utils'\r\n\r\nexport class PlayerHuman extends Player {\r\n  clickPromiseResolver: any\r\n\r\n  constructor(boardPiece: BoardPiece, canvas: HTMLCanvasElement) {\r\n    super(boardPiece, canvas)\r\n    this.clickPromiseResolver = null\r\n\r\n    canvas.addEventListener('click', evt => {\r\n      try {\r\n        this.handleClick(evt)\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    })\r\n  }\r\n\r\n  doAction(column: number) {\r\n    if (this.clickPromiseResolver && 0 <= column && column < Board.COLUMNS) {\r\n      this.clickPromiseResolver(column)\r\n    }\r\n  }\r\n\r\n  private handleClick(event: MouseEvent) {\r\n    const rect = this.canvas.getBoundingClientRect()\r\n    const x = event.clientX - rect.left\r\n    const y = event.clientY - rect.top\r\n    const column = Utils.getColumnFromCoord({ x: x, y: y })\r\n    this.doAction(column)\r\n  }\r\n\r\n  async getAction(board: Board): Promise<number> {\r\n    return new Promise<number>(r => (this.clickPromiseResolver = r))\r\n  }\r\n}\r\n"]}