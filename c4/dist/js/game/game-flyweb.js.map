{"version":3,"sources":["game/game-flyweb.ts"],"names":[],"mappings":"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","file":"game-flyweb.js","sourcesContent":["import { GameBase } from './game-base'\r\nimport { Player, PlayerFlywebMaster, PlayerFlywebSlave } from '../player'\r\nimport { INavigator } from '../flyweb-utils/Navigator'\r\nimport { IFlyWebFetchEvent, IFlyWebSocketEvent } from '../flyweb-utils/FlyWeb'\r\nimport { Board, BoardPiece } from '../board'\r\nimport { Utils } from '../utils'\r\n\r\nclass GameFlyweb extends GameBase {\r\n  readonly BASE_URL = window.location.pathname.substring(\r\n    0,\r\n    window.location.pathname.lastIndexOf('/')\r\n  )\r\n  readonly browser = <INavigator>navigator\r\n  isAcceptingPlayer: boolean = true\r\n  playerMaster: PlayerFlywebMaster\r\n  playerSlave: PlayerFlywebSlave\r\n  clientMode: boolean\r\n\r\n  constructor(\r\n    players: Array<Player>,\r\n    canvas: HTMLCanvasElement,\r\n    clientMode = false\r\n  ) {\r\n    super(players, canvas)\r\n    this.clientMode = clientMode\r\n    if (clientMode) {\r\n      this.playerSlave = <PlayerFlywebSlave>players[0]\r\n      this.playerMaster = <PlayerFlywebMaster>players[1]\r\n      this.initClient()\r\n    } else {\r\n      this.playerMaster = <PlayerFlywebMaster>players[0]\r\n      this.playerSlave = <PlayerFlywebSlave>players[1]\r\n      this.initServer()\r\n    }\r\n  }\r\n\r\n  afterMove(action: number) {\r\n    if (\r\n      (this.clientMode && this.currentPlayerId === 1) ||\r\n      (!this.clientMode && this.currentPlayerId === 0)\r\n    ) {\r\n      this.playerMaster.socket.send(\r\n        JSON.stringify({\r\n          type: 'move',\r\n          data: {\r\n            column: action,\r\n            from: this.currentPlayerId === 0 ? 'server' : 'client'\r\n          }\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  initClient() {\r\n    this.handleClientWs()\r\n  }\r\n  handleClientWs() {\r\n    const socket = new WebSocket('ws://' + window.location.host + '/api/ws')\r\n    this.playerMaster.socket = socket\r\n\r\n    socket.onopen = evt => {\r\n      console.log('client socket.onopen()', evt)\r\n    }\r\n\r\n    socket.onclose = evt => {\r\n      console.log('client socket.onclose()', evt)\r\n    }\r\n\r\n    socket.onerror = evt => {\r\n      console.log('client socket.onerror()', evt)\r\n      socket.close()\r\n    }\r\n\r\n    socket.onmessage = async evt => {\r\n      console.log('client socket.onmessage()', evt)\r\n\r\n      var message = JSON.parse(evt.data)\r\n      if (!message) {\r\n        return\r\n      }\r\n      if (message.from === 'client') {\r\n        return\r\n      }\r\n\r\n      if (message.type === 'start') {\r\n        Utils.showMessage(\r\n          '<h1>Welcome!</h1>Connection to Player 1 has been established. Game started!'\r\n        )\r\n        this.start()\r\n      } else if (message.type === 'move') {\r\n        this.playerSlave.doAction(message.data.column)\r\n      } else if (message.type === 'reset') {\r\n        this.reset()\r\n        await Utils.animationFrame()\r\n        this.start()\r\n      }\r\n    }\r\n  }\r\n\r\n  async fetch(evt: IFlyWebFetchEvent, url: string) {\r\n    const response = await fetch(this.BASE_URL + url)\r\n    const contentType = response.headers.get('Content-Type')\r\n    const blob = await response.blob()\r\n    const headers = {\r\n      'Content-Type': contentType,\r\n      'Cache-Control': 'no-cache, no-store, must-revalidate',\r\n      Pragma: 'no-cache',\r\n      Expires: 0\r\n    }\r\n    console.log('Response is: ', url)\r\n    evt.respondWith(\r\n      new Promise<Response>(r => r(new Response(blob, { headers })))\r\n    )\r\n  }\r\n  handleWsServer(evt: IFlyWebSocketEvent) {\r\n    const socket = evt.accept()\r\n    this.playerMaster.socket = socket\r\n\r\n    socket.onopen = evt => {\r\n      console.log('server socket.onopen()', evt, socket)\r\n      if (this.isAcceptingPlayer) {\r\n        this.isAcceptingPlayer = false\r\n        socket.send(\r\n          JSON.stringify({\r\n            type: 'start',\r\n            data: {\r\n              accepted: this.isAcceptingPlayer\r\n            }\r\n          })\r\n        )\r\n        Utils.showMessage(\r\n          '<h1>Welcome!</h1>Connection to Player 2 has been established. Game started!'\r\n        )\r\n        this.start()\r\n      } else {\r\n        socket.close()\r\n      }\r\n    }\r\n\r\n    socket.onclose = evt => {\r\n      console.log('server socket.onclose()', evt)\r\n      this.isAcceptingPlayer = true\r\n      this.reset()\r\n    }\r\n\r\n    socket.onerror = evt => {\r\n      console.log('server socket.onerror()', evt)\r\n      this.isAcceptingPlayer = true\r\n      socket.close()\r\n    }\r\n\r\n    socket.onmessage = async evt => {\r\n      console.log('server socket.onmessage()', evt)\r\n      const message = JSON.parse(evt.data)\r\n      if (!message) {\r\n        return\r\n      }\r\n      if (message.from === 'server') {\r\n        return\r\n      }\r\n\r\n      if (message.type === 'move') {\r\n        this.playerSlave.doAction(message.data.column)\r\n      } else if (message.type === 'reset') {\r\n        this.reset()\r\n        await Utils.animationFrame()\r\n        this.start()\r\n      }\r\n    }\r\n  }\r\n  async initServer() {\r\n    if (!('publishServer' in this.browser)) {\r\n      Utils.showMessage(`<h1>Attention!</h1>\r\n        FlyWeb requires Firefox Developer Edition or Nightly,\r\n        and enabling \"dom.flyweb.enabled\" flag at about:config`)\r\n      return false\r\n    }\r\n    const server = await this.browser.publishServer('c4 - Connect Four')\r\n    server.onfetch = async (evt: IFlyWebFetchEvent) => {\r\n      var urlParts = evt.request.url.split('?')\r\n\r\n      var url = urlParts[0]\r\n      var params = new URLSearchParams(urlParts[1])\r\n      console.log('me Requested for url: ', url, params)\r\n\r\n      switch (url) {\r\n        case '/dist/app.js':\r\n          await this.fetch(evt, '/dist/app-flyweb-client.js')\r\n          break\r\n        default: {\r\n          await this.fetch(evt, url)\r\n        }\r\n      }\r\n    }\r\n\r\n    server.onwebsocket = (evt: IFlyWebSocketEvent) => {\r\n      var url = evt.request.url\r\n      if (url === '/api/ws') {\r\n        this.handleWsServer(evt)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function initGameFlyweb({ clientMode = false }) {\r\n  const canvas = document.querySelector('canvas')\r\n  if (!canvas) {\r\n    console.error('Canvas DOM is null')\r\n    return\r\n  }\r\n  let players: Array<Player> = []\r\n  if (clientMode) {\r\n    players = [\r\n      new PlayerFlywebSlave(BoardPiece.PLAYER_1, canvas),\r\n      new PlayerFlywebMaster(BoardPiece.PLAYER_2, canvas)\r\n    ]\r\n  } else {\r\n    players = [\r\n      new PlayerFlywebMaster(BoardPiece.PLAYER_1, canvas),\r\n      new PlayerFlywebSlave(BoardPiece.PLAYER_2, canvas)\r\n    ]\r\n  }\r\n\r\n  const game = new GameFlyweb(players, canvas, clientMode)\r\n  Utils.showMessage(\r\n    '<h1>Welcome!</h1>Game will start after Player 2 has been connected.'\r\n  )\r\n  canvas.addEventListener('click', async () => {\r\n    if (game.isGameWon) {\r\n      game.reset()\r\n      if (game.playerMaster && game.playerMaster.socket) {\r\n        game.playerMaster.socket.send(\r\n          JSON.stringify({\r\n            type: 'reset',\r\n            data: {\r\n              reset: true\r\n            }\r\n          })\r\n        )\r\n      }\r\n      await Utils.animationFrame()\r\n      game.start()\r\n    }\r\n  })\r\n}\r\n"]}